build linux x86_64:
  image: ubuntu:20.04
  stage: build
  variables:
    DEBIAN_FRONTEND: noninteractive
    os: linux
    arch: amd64
    arch_name: x86_64
    evision_version: "0.1.0"
    elixir_version: "1.13.4"
  script:
    - |
      apt-get update
      apt-get install -y build-essential automake autoconf pkg-config bc m4 unzip zip wget curl git libssl-dev gzip libncurses5-dev python3 ca-certificates cmake
      apt-get install -y libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libavresample-dev ffmpeg
      curl -fSL https://repo.uwucocoa.moe/pgp.key | apt-key add -
      echo "deb [arch=${arch}] https://repo.uwucocoa.moe/ stable main" | tee /etc/apt/sources.list.d/uwucocoa.list
      apt-get update -q -y
      apt-get install erlang-uwu
      mkdir -p ../Precompiled
      wget --no-check-certificate https://github.com/elixir-lang/elixir/releases/download/v${elixir_version}/Precompiled.zip -O ../Precompiled/Precompiled.zip
      pushd "../Precompiled" && unzip -o Precompiled.zip && popd
      export PATH="$(pwd)/../Precompiled/bin:${PATH}"
      mix local.hex --force
      mix local.rebar --force
      mix deps.get
      mix compile
      export PKG_NAME=evision-${os}-${arch_name}-${evision_version}
      mkdir -p "${PKG_NAME}"
      cp -a _build/dev/lib/evision/priv "${PKG_NAME}"
      cp -a lib/generated "${PKG_NAME}"
      tar -czf "${PKG_NAME}.tar.gz" "${PKG_NAME}"
      rm -rf "${PKG_NAME}"
      ls -lah "${PKG_NAME}.tar.gz"
      mkdir -p artifacts && mv "${PKG_NAME}.tar.gz" artifacts

  artifacts:
    paths:
      - ./artifacts/evision-${os}-${arch_name}-${evision_version}.tar.gz

build linux arm64:
  image: arm64v8/ubuntu:20.04
  stage: build
  variables:
    DEBIAN_FRONTEND: noninteractive
    os: linux
    arch: arm64
    arch_name: arm64
    evision_version: "0.1.0"
    elixir_version: "1.13.4"
  script:
    - |
      apt-get update
      apt-get install -y build-essential automake autoconf pkg-config bc m4 unzip zip wget curl git libssl-dev libncurses5-dev python3 ca-certificates
      apt-get install -y libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libavresample-dev ffmpeg
      curl -fSL https://repo.uwucocoa.moe/pgp.key | apt-key add -
      echo "deb [arch=${arch}] https://repo.uwucocoa.moe/ stable main" | tee /etc/apt/sources.list.d/uwucocoa.list
      apt-get update -q -y
      apt-get install cmake-uwu erlang-uwu
      mkdir -p ../Precompiled
      wget --no-check-certificate https://github.com/elixir-lang/elixir/releases/download/v${elixir_version}/Precompiled.zip -O ../Precompiled/Precompiled.zip
      pushd "../Precompiled" && unzip -o Precompiled.zip && popd
      export PATH="$(pwd)/../Precompiled/bin:${PATH}"
      mix local.hex --force
      mix local.rebar --force
      mix deps.get
      mix compile
      export PKG_NAME=evision-${os}-${arch_name}-${evision_version}
      mkdir -p "${PKG_NAME}"
      cp -a _build/dev/lib/evision/priv "${PKG_NAME}"
      cp -a lib/generated "${PKG_NAME}"
      tar -czf "${PKG_NAME}.tar.gz" "${PKG_NAME}"
      rm -rf "${PKG_NAME}"
      ls -lah "${PKG_NAME}.tar.gz"
      mkdir -p artifacts && mv "${PKG_NAME}.tar.gz" artifacts

  artifacts:
    paths:
      - ./artifacts/evision-${os}-${arch_name}-${evision_version}.tar.gz

build linux armv7:
  image: arm32v7/ubuntu:20.04
  stage: build
  variables:
    DEBIAN_FRONTEND: noninteractive
    os: linux
    arch: armv7
    arch_name: armhf
    evision_version: "0.1.0"
    elixir_version: "1.13.4"
  script:
    - |
      apt-get update
      apt-get install -y build-essential automake autoconf pkg-config bc m4 unzip zip wget curl git libssl-dev libncurses5-dev python3 ca-certificates
      apt-get install -y libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libavresample-dev ffmpeg
      curl -fSL https://repo.uwucocoa.moe/pgp.key | apt-key add -
      echo "deb [arch=${arch_name}] https://repo.uwucocoa.moe/ stable main" | tee /etc/apt/sources.list.d/uwucocoa.list
      apt-get update -q -y
      apt-get install cmake-uwu erlang-uwu
      mkdir -p ../Precompiled
      wget --no-check-certificate https://github.com/elixir-lang/elixir/releases/download/v${elixir_version}/Precompiled.zip -O ../Precompiled/Precompiled.zip
      pushd "../Precompiled" && unzip -o Precompiled.zip && popd
      export PATH="$(pwd)/../Precompiled/bin:${PATH}"
      mix local.hex --force
      mix local.rebar --force
      mix deps.get
      mix compile
      export PKG_NAME=evision-${os}-${arch_name}-${evision_version}
      mkdir -p "${PKG_NAME}"
      cp -a _build/dev/lib/evision/priv "${PKG_NAME}"
      cp -a lib/generated "${PKG_NAME}"
      tar -czf "${PKG_NAME}.tar.gz" "${PKG_NAME}"
      rm -rf "${PKG_NAME}"
      ls -lah "${PKG_NAME}.tar.gz"
      mkdir -p artifacts && mv "${PKG_NAME}.tar.gz" artifacts

  artifacts:
    paths:
      - ./artifacts/evision-${os}-${arch_name}-${evision_version}.tar.gz
