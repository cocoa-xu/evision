name: macos-x86_64

on:
  pull_request:
    paths-ignore:
      - '*.md'
      - '**/*.md'
      - 'LICENSE*'
      - 'examples/**'
      - 'nerves/**'
      - 'Makefile.win'
      - 'cc_toolchain/**'
      - 'checksum-evision.exs'
      - '.github/FUNDING.yml'
      - '.github/workflows/nerves-*.yml'
      - '.github/workflows/linux-*.yml'
      - '.github/workflows/windows-*.yml'
      - '.github/workflows/test-*.yml'
      - '.github/workflows/macos-precompile.yml'
  push:
    branches:
      - main
      - test-*
    paths-ignore:
      - '*.md'
      - '**/*.md'
      - 'LICENSE*'
      - 'examples/**'
      - 'nerves/**'
      - 'Makefile.win'
      - 'cc_toolchain/**'
      - 'checksum-evision.exs'
      - '.github/FUNDING.yml'
      - '.github/workflows/nerves-*.yml'
      - '.github/workflows/linux-*.yml'
      - '.github/workflows/windows-*.yml'
      - '.github/workflows/test-*.yml'
      - '.github/workflows/macos-precompile.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  mix_test:
    runs-on: macos-11
    env:
      OPENCV_VER: "4.6.0"
      MIX_ENV: "test"
      EVISION_PREFER_PRECOMPILED: "false"

    steps:
      - uses: actions/checkout@v3

      - name: Install FFmpeg4, Erlang and Elixir
        run: |
          brew install erlang elixir ffmpeg@4
          brew link ffmpeg@4
          mix local.hex --force
          mix local.rebar --force

      - name: Cache mix packages
        id: cache-mix-deps
        uses: actions/cache@v3
        with:
          key: deps-${{ hashFiles('mix.lock') }}
          path: |
            ./deps

      - name: Get mix deps
        if: steps.cache-mix-deps.outputs.cache-hit != 'true'
        run: |
          mix deps.get

      - name: Cache OpenCV
        id: cache-opencv
        uses: actions/cache@v3
        with:
          key: opencv-${{ env.OPENCV_VER }}
          path: |
            ./3rd_party

      - name: Download OpenCV
        if: steps.cache-opencv.outputs.cache-hit != 'true'
        run: |
          bash scripts/download_opencv.sh ${OPENCV_VER} 3rd_party/cache 3rd_party/opencv/

      - name: Cache compiled OpenCV
        id: cache-mix-compile
        uses: actions/cache@v3
        with:
          key: compile-ffmpeg-${{ runner.os }}-${{ hashFiles('cc_toolchain/**') }}-${{ hashFiles('c_src/**') }}-${{ hashFiles('py_src/**') }}-${{ hashFiles('CMakeLists.txt') }}-${{ hashFiles('Makefile') }}-${{ env.OPENCV_VER }}
          path: |
            ./_build
            ./c_src/headers.txt
            ./c_src/configuration.private.hpp
            ./lib
            ./src

      - name: Mix Compile
        if: steps.cache-mix-compile.outputs.cache-hit != 'true'
        run: |
          rm -f _build/dev/lib/evision/priv/evision.so
          mix compile

      - name: Mix Test
        run: |
          mix test --include require_downloading --include require_ffmpeg
