name: macos-x86_64

on:
  pull_request:
    paths-ignore:
      - '**/README.md'
      - 'LICENSE*'
      - 'examples/**'
      - 'nerves/**'
      - 'Makefile.win'
      - 'cc_toolchain/**'
      - '.github/FUNDING.yml'
      - '.github/workflows/nerves-*.yml'
      - '.github/workflows/linux-*.yml'
      - '.github/workflows/windows-*.yml'
      - '.github/workflows/test-*.yml'
      - '.github/workflows/macos-precompile.yml'
  push:
    branches:
      - main
      - test-*
    paths-ignore:
      - '**/README.md'
      - 'LICENSE*'
      - 'examples/**'
      - 'nerves/**'
      - 'Makefile.win'
      - 'cc_toolchain/**'
      - '.github/FUNDING.yml'
      - '.github/workflows/nerves-*.yml'
      - '.github/workflows/linux-*.yml'
      - '.github/workflows/windows-*.yml'
      - '.github/workflows/test-*.yml'
      - '.github/workflows/macos-precompile.yml'
  workflow_dispatch:

jobs:
  mix_test:
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v2

      - name: Install Erlang and Elixir
        run: |
          brew install erlang
          brew install elixir
          brew install ffmpeg@4
          brew link ffmpeg@4
          mix local.hex --force
          mix local.rebar --force

      - name: Cache mix packages and OpenCV
        id: cache-mix-and-opencv
        uses: actions/cache@v3
        with:
          key: deps-${{ hashFiles('mix.lock') }}-${{ env.OPENCV_VER }}
          path: |
            ./deps
            ./3rd_party

      - name: Get mix deps and download OpenCV
        if: steps.cache-mix-and-opencv.outputs.cache-hit != 'true'
        run: |
          mix deps.get
          bash scripts/download_opencv.sh ${OPENCV_VER} 3rd_party/cache 3rd_party/opencv/

      - name: Cache compiled OpenCV
        id: cache-mix-compile
        uses: actions/cache@v3
        with:
          key: compile-ff${{ runner.os }}-${{ hashFiles('cc_toolchain/**') }}-${{ hashFiles('c_src/**') }}-${{ env.OPENCV_VER }}
          path: |
            ./_build

      - name: Mix Compile
        run: |
          export MIX_ENV=test
          mix deps.get
          mix compile

      - name: Mix Test
        run: |
          mix test --include require_downloading --include require_ffmpeg
