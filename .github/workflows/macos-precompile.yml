name: macos-precompile

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  mix_compile:
    runs-on: macos-11
    env:
      MIX_ENV: prod
      OPENCV_VER: "4.6.0"
      EVISION_PREFER_PRECOMPILED: "false"
      EVISION_GENERATE_LANG: "erlang,elixir"
      NIF_VERSION: "2.16"
    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              arch: x86_64
              arch_name: x86_64
          - pair:
              arch: arm64
              arch_name: aarch64

    steps:
      - uses: actions/checkout@v3

      - name: Install FFmpeg4, Erlang and Elixir
        run: |
          brew install erlang elixir
          mix local.hex --force
          mix local.rebar --force

      - name: Cache mix packages
        id: cache-mix-deps
        uses: actions/cache@v3
        with:
          key: deps-${{ hashFiles('mix.lock') }}
          path: |
            ./deps

      - name: Get mix deps
        if: steps.cache-mix-deps.outputs.cache-hit != 'true'
        run: |
          mix deps.get

      - name: Cache OpenCV source code
        id: cache-opencv
        uses: actions/cache@v3
        with:
          key: opencv-${{ env.OPENCV_VER }}
          path: |
            ./3rd_party

      - name: Download OpenCV source code
        if: steps.cache-opencv.outputs.cache-hit != 'true'
        run: |
          bash scripts/download_opencv.sh ${OPENCV_VER} 3rd_party/cache 3rd_party/opencv/

      - name: Cache compiled OpenCV
        id: cache-mix-compile_opencv
        uses: actions/cache@v3
        with:
          key: precompile-opencv-${{ env.OPENCV_VER }}-${{ matrix.pair.arch }}-apple-darwin-${{ hashFiles('Makefile') }}-${{ hashFiles('py_src/*.py') }}
          path: |
            ./_build/${{ env.MIX_ENV }}/lib/evision
            ./c_src/headers.txt
            ./c_src/configuration.private.hpp

      - name: Compile OpenCV
        if: steps.cache-mix-compile_opencv.outputs.cache-hit != 'true'
        run: |
          if [ "${{ matrix.pair.arch }}" = "arm64" ]; then
            export CMAKE_OPENCV_OPTIONS="-D WITH_FFMPEG=OFF -D WITH_IPP=OFF -D CMAKE_OSX_ARCHITECTURES=arm64"
            export CMAKE_EVISION_OPTIONS="-D CMAKE_OSX_ARCHITECTURES=arm64"
          fi
          mix compile_opencv

      - name: Mix compile
        run: |
          if [ "${{ matrix.pair.arch }}" = "arm64" ]; then
            export CMAKE_OPENCV_OPTIONS="-D WITH_FFMPEG=OFF -D WITH_IPP=OFF -D CMAKE_OSX_ARCHITECTURES=arm64"
            export CMAKE_EVISION_OPTIONS="-D CMAKE_OSX_ARCHITECTURES=arm64"
          fi
          rm -f _build/${{ env.MIX_ENV }}/lib/evision/priv/evision.so

          mkdir -p lib/generated
          mkdir -p src/generated
          cat c_src/headers.txt
          python3 py_src/gen2.py c_src lib/generated src/generated c_src/headers.txt "${EVISION_GENERATE_LANG}"

          mix compile

      - name: Create precompiled library
        run: |
          export PKG_NAME=evision-nif_${NIF_VERSION}-${{ matrix.pair.arch_name }}-apple-darwin-${GITHUB_REF##*/v}
          mkdir -p "${PKG_NAME}"
          cp -a _build/${MIX_ENV}/lib/evision/priv "${PKG_NAME}"
          cp -a lib/generated "${PKG_NAME}/elixir_generated"
          cp -a src/generated "${PKG_NAME}/erlang_generated"
          tar -czf "${PKG_NAME}.tar.gz" "${PKG_NAME}"
          rm -rf "${PKG_NAME}"
          ls -lah "${PKG_NAME}.tar.gz"
          mkdir -p artifacts
          mv "${PKG_NAME}.tar.gz" artifacts

      - uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.tar.gz
