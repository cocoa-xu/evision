name: macos-precompile

on:
  push:
    tags:
      - '*-dev'
      - '*-prod'
      - '*-dev-macos'

jobs:
  mix_test:
    runs-on: macos-11
    env:
      MIX_ENV: dev
      OPENCV_VER: "4.5.5"
    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              arch: x86_64
          - pair:
              arch: arm64

    steps:
      - uses: actions/checkout@v3

      - name: Install Erlang and Elixir
        run: |
          brew install erlang
          brew install elixir
          mix local.hex --force
          mix local.rebar --force

      - name: Cache mix packages and OpenCV
        id: cache-mix-and-opencv
        uses: actions/cache@v3
        with:
          key: deps-${{ hashFiles('mix.lock') }}-${{ env.OPENCV_VER }}
          path: |
            ./deps
            ./3rd_party

      - name: Get mix deps and download OpenCV
        if: steps.cache-mix-and-opencv.outputs.cache-hit != 'true'
        run: |
          mix deps.get
          bash scripts/download_opencv.sh ${OPENCV_VER} 3rd_party/cache 3rd_party/opencv/

      - name: Cache compiled OpenCV
        id: cache-mix-compile
        uses: actions/cache@v3
        with:
          key: precompile-${{ runner.os }}-${{ matrix.pair.arch }}-${{ hashFiles('cc_toolchain/**') }}-${{ hashFiles('c_src/**') }}-${{ hashFiles('CMakeLists.txt') }}-${{ hashFiles('Makefile') }}-${{ env.OPENCV_VER }}
          path: |
            ./_build
            ./c_src/headers.txt
            ./c_src/configuration.private.hpp
            ./lib
            ./src

      - name: Create precompiled library
        run: |
          if [ "${{ matrix.pair.arch }}" = "arm64" ]; then
            export CMAKE_OPENCV_OPTIONS="-D WITH_IPP=OFF -D CMAKE_OSX_ARCHITECTURES=arm64"
            export CMAKE_EVISION_OPTIONS="-D CMAKE_OSX_ARCHITECTURES=arm64"
          fi

          mix deps.get
          mix compile
          export PKG_NAME=evision-darwin-${{ matrix.pair.arch }}-${GITHUB_REF##*/}
          mkdir -p "${PKG_NAME}"
          cp -a _build/${MIX_ENV}/lib/evision/priv "${PKG_NAME}"
          cp -a lib/generated "${PKG_NAME}"
          tar -czf "${PKG_NAME}.tar.gz" "${PKG_NAME}"
          rm -rf "${PKG_NAME}"
          ls -lah "${PKG_NAME}.tar.gz"
          mkdir -p artifacts
          mv "${PKG_NAME}.tar.gz" artifacts

      - uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.tar.gz
