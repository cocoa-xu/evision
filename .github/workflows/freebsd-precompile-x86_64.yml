name: precompile-freebsd

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
  push:
    tags:
      - "v*"
      - "freebsd-v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  freebsd:
    runs-on: ubuntu-latest
    env:
      OTP_VERSION: "25.3.2.14"
      NIF_VERSION: "2.16"
      ELIXIR_VERSION: "1.17.3"
    strategy:
      matrix:
        job:
          - { fullversion: "13.5", major: "13", arch: "x86_64", contrib: "false" }
          - { fullversion: "13.5", major: "13", arch: "x86_64", contrib: "true" }
      fail-fast: false

    name: "${{ matrix.job.arch }}-unknown-freebsd / contrib ${{ matrix.job.contrib }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Precompiled OTP
        id: cache-otp
        uses: actions/cache@v4
        with:
          key: precompile-otp-${{ env.OTP_VERSION }}-${{ matrix.job.arch }}-unknown-freebsd${{ matrix.job.major }}
          path: |
            ./otp-${{ matrix.job.arch }}-unknown-freebsd${{ matrix.job.major }}.tar.gz

      - name: Download Precompiled OTP
        if: steps.cache-otp.outputs.cache-hit != 'true'
        run: |
          curl -fSL "https://github.com/cocoa-xu/otp-build/releases/download/v${{ env.OTP_VERSION }}/otp-${{ matrix.job.arch }}-unknown-freebsd${{ matrix.job.major }}.tar.gz" -o "otp-${{ matrix.job.arch }}-unknown-freebsd${{ matrix.job.major }}.tar.gz"

      - name: Copy build scripts
        run: |
          cp -f .github/scripts/script-to-build-freebsd.sh ./build.sh

      - name: Get tagged version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            export INPUT_VERSION="${{ github.event.inputs.version }}"
            export TAGGED_VERSION="${INPUT_VERSION##*v}"
          else
            export TAGGED_VERSION="${GITHUB_REF##*/v}"
            if [ "${GITHUB_REF}" = "${TAGGED_VERSION}" ]; then
              export TAGGED_VERSION="${GITHUB_REF##*/freebsd-}"
              export TAGGED_VERSION="${TAGGED_VERSION##*v}"
            fi
          fi
          echo "tag=${TAGGED_VERSION}" >> $GITHUB_OUTPUT

      - name: Compile in FreeBSD
        id: compile-freebsd
        uses: vmactions/freebsd-vm@v1
        with:
          envs: "OTP_VERSION ELIXIR_VERSION NIF_VERSION"
          release: ${{ matrix.job.fullversion }}
          usesh: true
          prepare: |
            pkg install -y gmake cmake llvm python3 git curl openssl ca_root_nss pkgconf ncurses unzip sudo ccache openblas bash

          run: |
            export TRIPLET="${{ matrix.job.arch }}-unknown-freebsd"
            export ROOT_DIR="$(pwd)"
            export EVISION_PREFER_PRECOMPILED="false"
            export OTP_MAIN_VER="${OTP_VERSION%%.*}"
            export MIX_ENV="prod"
            export TAGGED_VERSION="${{ steps.version.outputs.tag }}"

            sudo tar -xzf "otp-${{ matrix.job.arch }}-unknown-freebsd${{ matrix.job.major }}.tar.gz" -C /

            mkdir -p "${ROOT_DIR}/elixir-${ELIXIR_VERSION}"
            cd "${ROOT_DIR}/elixir-${ELIXIR_VERSION}"
            curl -fSL "https://github.com/elixir-lang/elixir/releases/download/v${ELIXIR_VERSION}/elixir-otp-${OTP_MAIN_VER}.zip" -o "elixir-otp-${OTP_MAIN_VER}.zip"
            unzip -q "elixir-otp-${OTP_MAIN_VER}.zip"
            export PATH="$(pwd)/bin:${PATH}"
            cd "${ROOT_DIR}"

            echo "mkdir -p artifacts"
            mkdir -p artifacts

            mix local.hex --force
            mix local.rebar --force

            mix deps.get

            export EVISION_ENABLE_CONTRIB=${{ matrix.job.contrib }}
            if [ "${{ matrix.job.contrib }}" = "false" ]; then
              export PKG_NAME='evision-nif_'"${NIF_VERSION}"'-'"${TRIPLET}"'-'"${TAGGED_VERSION}"
            else
              export PKG_NAME='evision-nif_'"${NIF_VERSION}"'-'"${TRIPLET}"'-contrib-'"${TAGGED_VERSION}"
            fi

            cd "${ROOT_DIR}"
            bash ./build.sh

            rm -rf _build 3rd_party artifacts deps
            rm -rf "${ROOT_DIR}/elixir-${ELIXIR_VERSION}"
            rm -rf lib/generated src/generated

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/freebsd-')
        with:
          tag_name: v${{ steps.version.outputs.tag }}
          files: |
            evision-nif_*.tar.gz
            evision-nif_*.sha256
